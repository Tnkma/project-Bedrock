name: "Terraform Destroy"

# Manual trigger
on:
  workflow_dispatch:

jobs:
  destroy:
    name: "Terraform Destroy"
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout repository
      - name: "Checkout Repository"
        uses: actions/checkout@v4

      # 2. Configure AWS credentials
      - name: "Configure AWS Credentials"
        uses: aws-actions/configure-aws-credentials@v4
        with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: us-east-1

      # 3. Setup Terraform
      - name: "Setup Terraform"
        uses: hashicorp/setup-terraform@v3

      # 4. Force unlock stale Terraform lock with retries
      - name: "Force unlock stale Terraform lock with retries"
        run: |
          LOCK_ID=$(aws dynamodb scan \
            --table-name terraform-locks \
            --query "Items[?contains(LockID.S, 'terraform.tfstate')].LockID.S" \
            --output text)
          if [ -n "$LOCK_ID" ]; then
            echo "Found stale lock: $LOCK_ID, attempting to unlock..."
            for i in {1..3}; do
              echo "Attempt $i..."
              terraform force-unlock -force $LOCK_ID && break
              echo "Retrying in 5 seconds..."
              sleep 5
            done
            echo "Unlock attempt finished."
          else
            echo "No stale lock found."
          fi
        working-directory: ./terraform


      # 5. Initialize Terraform with backend
      - name: "Terraform Init"
        run: terraform init -reconfigure
        working-directory: ./terraform

      # 6. Run Terraform Destroy
      - name: "Terraform Destroy"
        run: terraform destroy -auto-approve
        working-directory: ./terraform

